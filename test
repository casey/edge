#!/usr/bin/env python3.3

import sys, requests, string, random

endpoint = sys.argv[1]

vertex_characters = string.ascii_letters + string.digits + '.-_'

def vertex_name(length=32):
  return ''.join(random.choice(vertex_characters) for _ in range(32))

ENDC  = '\033[0m'
RED   = '\033[31m'
GREEN = '\033[32m'

def test(msg=''):
  msg = msg[0:15]
  sys.stdout.write("%s " % msg.ljust(15, '.'))

def fail(msg):
  sys.stdout.write("%sFAIL%s: %s\n" % (RED, ENDC, msg))
  sys.exit(1)

def okay(msg=''):
  if msg:
    sys.stdout.write("%sOKAY%s: %s\n" % (GREEN, ENDC, msg))
  else:
    sys.stdout.write("%sOKAY%s\n" % (GREEN, ENDC))

def request(method, a, b, expected_status, expected_text):
  test('%s %s' % (method, expected_status))
  r = requests.request(method, '%s/%s/%s' % (endpoint, a,b))
  r.status_code == expected_status or fail('%s - %s' % (r.status_code, r.text.strip()))
  r.text == expected_text or fail('%s - %s' % (r.status_code, r.text.strip()))
  okay('%s - %s' % (r.status_code, r.text.strip()))
  return r.text

# long vertex names rejected
request('POST', vertex_name(1  ), vertex_name(128), 403, "403 Forbidden\n")
request('POST', vertex_name(128), vertex_name(  1), 403, "403 Forbidden\n")

a = vertex_name()
b = vertex_name()
n = 0

request('GET',  a, b, 200, "0")
request('POST', a, b, 200, "1")
request('POST', a, b, 200, "2")
request('GET',  a, b, 200, "2")
request('GET',  a, b, 200, "2")
request('POST', a, b, 200, "3")
request('GET',  a, b, 200, "3")
request('GET',  a, b, 200, "3")
